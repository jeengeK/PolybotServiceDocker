name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Or your preferred branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t jeenge/yolo5:1.0.1 .
          echo IMAGE_NAME=<jeenge/yolo5:1.0.1> >> $GITHUB_OUTPUT
        id: image_build

      - name: Login to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
           host: ${{ secrets.EC2_HOST }}
           username: ubuntu  # Or your EC2 username
           key: ${{ secrets.EC2_PRIVATE_KEY }}
           script: |
             echo "Logging to EC2"

      - name: Copy Docker Compose file and image to EC2
        uses: appleboy/scp-action@master
        with:
         host: ${{ secrets.EC2_HOST }}
         username: ubuntu
         key: ${{ secrets.EC2_PRIVATE_KEY }}
         source: ./docker-compose.yaml,./Dockerfile
         target: /home/jeenge/PolybotServiceDocker

      - name: Copy Docker Image
        uses: appleboy/scp-action@master
        with:
         host: ${{ secrets.EC2_HOST }}
         username: ubuntu
         key: ${{ secrets.EC2_PRIVATE_KEY }}
         source: .
         target: /home/jeenge/PolybotServiceDocker

      - name: Deploy to EC2 with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu  # Or your EC2 username
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
             cd /home/jeenge/PolybotServiceDocker
             docker pull ${{ steps.image_build.outputs.IMAGE_NAME }}
             docker-compose up -d --force-recreate
             docker system prune -a -f